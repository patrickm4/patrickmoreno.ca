---
// Component Imports
import MainHead from '../components/MainHead.astro';
import Nav from '../components/Nav.astro';
import Footer from '../components/Footer.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';

// Data Fetching: List all Markdown posts in the repo.
const projects = await Astro.glob('./project/**/*.md');
const featuredProject = projects[0];

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<html lang="en">
	<head>
		<MainHead
			title="Patrick Moreno"
			description="Patrick Moreno Full Stack Developer"
		/>
		<style>
			.wrapper {
				margin-top: 2em;
				margin-bottom: 2em;
			}

			.hero {
				position: relative;
				overflow: hidden;
			}

			@media (min-width: 750px) {
				.hero {
					height: 45vw;
				}
			}

			.img {
				display: block;
				width: 100%;
				height: auto;
			}
			.front-about-img {
				margin-top: 4.1rem;
			}
			.gradient,
			.gradient2 {
				background-image: url('/assets/mesh-gradient.jpg');
				background-size: cover;
				pointer-events: none;
				mix-blend-mode: screen;
				width: 100%;
				height: 100%;
				position: absolute;
				top: 0;
				left: 0;
				z-index: 2;
			}

			.gradient2 {
				mix-blend-mode: multiply;
				background-size: cover;
			}

			.overlay {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				z-index: 10;
				display: flex;
				flex-direction: column;
				align-items: flex-start;
				justify-content: center;
				padding-left: 2rem;
			}

			@media (min-width: 750px) {
				.overlay {
					padding-left: 4rem;
				}
			}

			.title {
				font-weight: 900;
				font-size: var(--f-u6);
				margin-bottom: 0.5rem;
				margin-top: 0;
			}

			@media (min-width: 750px) {
				.title {
					font-size: var(--f-u12);
				}
			}

			.grid {
				display: grid;
				grid-gap: 2rem;
			}

			@media (min-width: 1200px) {
				.grid {
					grid-template-columns: 2fr 1fr;
				}
			}

			.sectionTitle {
				font-weight: 700;
				font-size: var(--f-u8);
				margin-top: 4rem;
				margin-bottom: 2rem;
			}

			.roles {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5em;
				font-size: var(--f-d1);
			}

			.role {
				position: relative;
				display: inline-block;
				white-space: nowrap;
				font-weight: 900;
				color: var(--t-bg);
				background-color: var(--t-fg);
				padding: 0.25em 0.5em;
				z-index: 2;
			}

			@media (min-width: 750px) {
				.role {
					font-size: var(--f-u3);
				}
			}

			.role:nth-of-type(1) .invert {
				background-color: var(--c-pink);
			}

			.role:nth-of-type(2) .invert {
				background-color: var(--c-blue);
			}

			.role:nth-of-type(3) .invert {
				background-color: var(--c-green);
			}

			.role:hover .invert {
				clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
			}

			.invert {
				position: absolute;
				color: var(--t-fg);
				display: flex;
				align-items: center;
				justify-content: center;
				width: 100%;
				height: 100%;
				top: 0;
				left: 0;
				pointer-events: none;
				clip-path: polygon(0% 100%, 100% 100%, 100% 200%, 0% 200%);
				transition: clip-path cubic-bezier(0.4, 0, 0.5, 1) 150ms;
			}

			.desc {
				font-size: var(--f-u1);
				margin-top: 1.5rem;
				margin-bottom: 0;
			}

			.subtitle {
				display: block;
				font-weight: 400;
				font-size: var(--f-d6);
				letter-spacing: -0.0625em;
			}

			.bio {
				line-height: 2;
				margin-bottom: 2rem;
			}

			.bio > span:first-of-type {
				line-height: 1;
				margin-bottom: 0.5em;
				display: block;
				font-weight: 700;
				font-size: var(--f-u4);
			}

			.buttonContainer {
				text-align: center;
				margin-top: 2em;
			}
		</style>
	</head>
	<body>
		<Nav />
		<header class="hero">
			<div class="overlay">
				<div style="display:flex;align-items:center;position:relative;">
					<h1 class="title">
						Patrick Moreno
					</h1>
					<div id="shapes" style="position:absolute;right:-55%;"></div>
				</div>
				<div class="front-page-subhead">
					I'm a web developer. Currently employed at <a href="https://www.tmmedia.ca/" target="_blank" class="link"></a>Techno Monkey Media. <p>Reach out and let's chat about something!</p>
				</div>			
			</div>
		</header>
		<main class="wrapper">
			<div class="grid">
				<div class="section">
					<h3 class="sectionTitle">About me</h3>
					<p class="bio">
						<span>Hi ðŸ‘‹</span>
						<p>
							Interested in progressing my career in software. Graduated 2019 with a Diploma in Digital Design & Development at BCIT. Based out of BC, Canada. I also like designing logos using Illustrator or editing images with Photoshop.
						</p>
						<p>
							Currently learning C# and Rust.
						</p>
						<p>
							Always looking at side hustles and little projects to do. Currently selling TCG cards like PokÃ©mon.
						</p>
					</p>
					<p>
						<a href="/about">Read more</a>
						<a class="link" href="https://www.linkedin.com/in/patrick-moreno/" target="_blank"> LinkedIn</a>
						<a class="link" href="https://github.com/patrickm4" target="_blank"> Github</a>
					</p>					
				</div>
				<div>
					<img class="front-about-img" src="https://patrickmore.ca/wp-content/uploads/2019/02/PatrickMediumShot-300x400.jpg"/>
				</div>
				<!-- <div>
					<div>Contact</div>
					<div>About me</div>
					<div>Currently Learning</div>
					<div>Current project</div>
					<div>Delicious recipe i've cooked recently</div>
					<div>Resume</div>
					<div>Education, make it downloadable and print friendly</div>
					<div>Blog</div>
					<div>Photo of me</div>
					<div>Github, Linkedin links</div>
					<div>shop</div>
				  </div>  -->
			</div>
		</main>
		<Footer />
		<script>
			//shape magic
			let shape = document.getElementById('shapes');
			let degree = 0;
			let timeId, isCircle = false;
			let spinning = false;
			// let spins = [];

			function rotate() {
				// spins.push('wee')

				// if (spins.length > 5) {
				// 	document.getElementById('wee').style.opacity = '1';
				// } else {
				// 	document.getElementById('wee').style.opacity = '0';
				// }

				// setTimeout(() => {
				// 	spins.pop()
				// }, 3000)

				degree += 90;
				shape.style.transform = `rotate(${degree}deg)`;
				if(isCircle){
					shape.style.borderRadius = '0%';
					isCircle = false;
				} else {
					shape.style.borderRadius = '50%';
					isCircle = true
				};
			}

			function startSpin() {
				rotate()
				spinning = true
				timeId = window.setInterval(rotate, 2000);
			}

			document.addEventListener("visibilitychange", function () {
					if(document.hidden){
						clearInterval(timeId)
						spinning = false
					} else if (!spinning) {
						startSpin()
					}
			})


			// shape.addEventListener("mouseover", function () {
			// 	if (timeId) { clearInterval(timeId), timeId = false }
			// })
			// shape.addEventListener("mouseleave", function () {
			// 	startSpin()
			// })

			startSpin()
		</script>
	</body>
</html>
